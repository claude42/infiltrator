package model

import "github.com/claude42/infiltrator/util"

// Generated by FilterManager

type EventDisplay struct {
	util.EventImpl

	Display Display
}

func NewEventDisplay(display Display) *EventDisplay {
	ev := &EventDisplay{Display: display}
	ev.EventImpl.SetEventNow()
	return ev
}

type EventError struct {
	util.EventImpl

	Beep         bool
	ErrorMessage string
}

func NewEventError(beep bool, errorMessage string) *EventError {
	ev := &EventError{Beep: beep, ErrorMessage: errorMessage}
	ev.EventImpl.SetEventNow()
	return ev
}

type EventFileChanged struct {
	util.EventImpl

	length     int
	percentage int
}

func NewEventFileChanged(length int, percentage int) *EventFileChanged {
	ev := &EventFileChanged{length: length, percentage: percentage}
	ev.EventImpl.SetEventNow()
	return ev
}

func (ev *EventFileChanged) Percentage() int {
	return ev.percentage
}

func (ev *EventFileChanged) Length() int {
	return ev.length
}
